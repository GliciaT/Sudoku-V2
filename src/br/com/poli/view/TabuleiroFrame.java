/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.poli.view;

import br.com.poli.exception.DicasInsuficienteException;
import br.com.poli.exception.MovimentoIncorretoException;
import br.com.poli.exception.MovimentoInvalidoException;
import br.com.poli.principal.DificuldadePartida;
import static br.com.poli.principal.DificuldadePartida.FACIL;
import br.com.poli.principal.Partida;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author dylan
 */
public class TabuleiroFrame extends javax.swing.JFrame {

    Partida novoJogo;

    /**
     * Creates new form TabuleiroFrame
     */
    public TabuleiroFrame() {
        initComponents();
        clock1.start();
    }

    public TabuleiroFrame(String nome, DificuldadePartida dificuldade, int idade) {
        novoJogo = new Partida(nome, dificuldade, idade);
        initComponents();
        setAllTextField();
        clock1.start();

    }
    Thread clock1 = new Thread() {

        @Override
        public void run() {
            int hor = 00, min = 00, seg = 00;

            for (;;) {
                try {
                    //System.out.println(hor + ":" + min + ":" + seg);
                    seg++;
                    if (seg > 59) {
                        seg = 0;
                        min++;
                    }
                    if (min > 59) {
                        seg = 0;
                        min = 0;
                        hor++;
                    }
                    if (min == 2) {
                        dispose();
                    }
                    tempo.setText(hor + ":" + min + ":" + seg);
                    Thread.sleep(999);
                } catch (InterruptedException e) {

                }
            }
        }
    };

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField16 = new javax.swing.JTextField();
        grid00 = new javax.swing.JTextField();
        grid10 = new javax.swing.JTextField();
        grid20 = new javax.swing.JTextField();
        grid30 = new javax.swing.JTextField();
        grid40 = new javax.swing.JTextField();
        grid50 = new javax.swing.JTextField();
        grid60 = new javax.swing.JTextField();
        grid70 = new javax.swing.JTextField();
        grid80 = new javax.swing.JTextField();
        grid01 = new javax.swing.JTextField();
        grid11 = new javax.swing.JTextField();
        grid21 = new javax.swing.JTextField();
        grid31 = new javax.swing.JTextField();
        grid41 = new javax.swing.JTextField();
        grid51 = new javax.swing.JTextField();
        grid61 = new javax.swing.JTextField();
        grid71 = new javax.swing.JTextField();
        grid81 = new javax.swing.JTextField();
        grid02 = new javax.swing.JTextField();
        grid12 = new javax.swing.JTextField();
        grid22 = new javax.swing.JTextField();
        grid32 = new javax.swing.JTextField();
        grid42 = new javax.swing.JTextField();
        grid52 = new javax.swing.JTextField();
        grid62 = new javax.swing.JTextField();
        grid72 = new javax.swing.JTextField();
        grid82 = new javax.swing.JTextField();
        grid03 = new javax.swing.JTextField();
        grid13 = new javax.swing.JTextField();
        grid23 = new javax.swing.JTextField();
        grid33 = new javax.swing.JTextField();
        grid43 = new javax.swing.JTextField();
        grid53 = new javax.swing.JTextField();
        grid63 = new javax.swing.JTextField();
        grid73 = new javax.swing.JTextField();
        grid83 = new javax.swing.JTextField();
        grid04 = new javax.swing.JTextField();
        grid14 = new javax.swing.JTextField();
        grid24 = new javax.swing.JTextField();
        grid34 = new javax.swing.JTextField();
        grid44 = new javax.swing.JTextField();
        grid54 = new javax.swing.JTextField();
        grid64 = new javax.swing.JTextField();
        grid74 = new javax.swing.JTextField();
        grid84 = new javax.swing.JTextField();
        grid05 = new javax.swing.JTextField();
        grid15 = new javax.swing.JTextField();
        grid25 = new javax.swing.JTextField();
        grid35 = new javax.swing.JTextField();
        grid45 = new javax.swing.JTextField();
        grid55 = new javax.swing.JTextField();
        grid65 = new javax.swing.JTextField();
        grid75 = new javax.swing.JTextField();
        grid85 = new javax.swing.JTextField();
        grid06 = new javax.swing.JTextField();
        grid16 = new javax.swing.JTextField();
        grid26 = new javax.swing.JTextField();
        grid36 = new javax.swing.JTextField();
        grid46 = new javax.swing.JTextField();
        grid56 = new javax.swing.JTextField();
        grid76 = new javax.swing.JTextField();
        grid86 = new javax.swing.JTextField();
        grid66 = new javax.swing.JTextField();
        grid07 = new javax.swing.JTextField();
        grid17 = new javax.swing.JTextField();
        grid27 = new javax.swing.JTextField();
        grid37 = new javax.swing.JTextField();
        grid47 = new javax.swing.JTextField();
        grid57 = new javax.swing.JTextField();
        grid67 = new javax.swing.JTextField();
        grid77 = new javax.swing.JTextField();
        grid87 = new javax.swing.JTextField();
        grid08 = new javax.swing.JTextField();
        grid18 = new javax.swing.JTextField();
        grid28 = new javax.swing.JTextField();
        grid38 = new javax.swing.JTextField();
        grid48 = new javax.swing.JTextField();
        grid58 = new javax.swing.JTextField();
        grid68 = new javax.swing.JTextField();
        grid78 = new javax.swing.JTextField();
        grid88 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buttonDica = new javax.swing.JButton();
        buttonDesistir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        progressoDicas = new javax.swing.JProgressBar();
        progressoErros = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        tempo = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jTextField16.setText("jTextField1");
        jTextField16.setPreferredSize(new java.awt.Dimension(30, 30));
        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        grid00.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid00.setAlignmentX(0.0F);
        grid00.setAlignmentY(0.0F);
        grid00.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid00KeyTyped(evt);
            }
        });

        grid10.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid10.setAlignmentX(1.0F);
        grid10.setAlignmentY(0.0F);
        grid10.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid10KeyTyped(evt);
            }
        });

        grid20.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid20.setAlignmentX(2.0F);
        grid20.setAlignmentY(0.0F);
        grid20.setPreferredSize(new java.awt.Dimension(30, 30));
        grid20.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid20KeyTyped(evt);
            }
        });

        grid30.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid30.setAlignmentX(3.0F);
        grid30.setAlignmentY(0.0F);
        grid30.setPreferredSize(new java.awt.Dimension(30, 30));
        grid30.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid30KeyTyped(evt);
            }
        });

        grid40.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid40.setAlignmentX(4.0F);
        grid40.setAlignmentY(0.0F);
        grid40.setPreferredSize(new java.awt.Dimension(30, 30));
        grid40.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid40KeyTyped(evt);
            }
        });

        grid50.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid50.setAlignmentX(5.0F);
        grid50.setAlignmentY(0.0F);
        grid50.setPreferredSize(new java.awt.Dimension(30, 30));
        grid50.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid50KeyTyped(evt);
            }
        });

        grid60.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid60.setAlignmentX(6.0F);
        grid60.setAlignmentY(0.0F);
        grid60.setPreferredSize(new java.awt.Dimension(30, 30));
        grid60.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid60KeyTyped(evt);
            }
        });

        grid70.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid70.setAlignmentX(7.0F);
        grid70.setAlignmentY(0.0F);
        grid70.setPreferredSize(new java.awt.Dimension(30, 30));
        grid70.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid70KeyTyped(evt);
            }
        });

        grid80.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid80.setAlignmentX(8.0F);
        grid80.setAlignmentY(0.0F);
        grid80.setPreferredSize(new java.awt.Dimension(30, 30));
        grid80.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid80KeyTyped(evt);
            }
        });

        grid01.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid01.setAlignmentX(0.0F);
        grid01.setAlignmentY(1.0F);
        grid01.setPreferredSize(new java.awt.Dimension(30, 30));
        grid01.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid01KeyTyped(evt);
            }
        });

        grid11.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid11.setPreferredSize(new java.awt.Dimension(30, 30));
        grid11.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid11KeyTyped(evt);
            }
        });

        grid21.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid21.setPreferredSize(new java.awt.Dimension(30, 30));
        grid21.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid21KeyTyped(evt);
            }
        });

        grid31.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid31.setPreferredSize(new java.awt.Dimension(30, 30));
        grid31.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid31KeyTyped(evt);
            }
        });

        grid41.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid41.setPreferredSize(new java.awt.Dimension(30, 30));
        grid41.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid41KeyTyped(evt);
            }
        });

        grid51.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid51.setPreferredSize(new java.awt.Dimension(30, 30));
        grid51.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid51KeyTyped(evt);
            }
        });

        grid61.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid61.setPreferredSize(new java.awt.Dimension(30, 30));
        grid61.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid61KeyTyped(evt);
            }
        });

        grid71.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid71.setPreferredSize(new java.awt.Dimension(30, 30));
        grid71.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid71KeyTyped(evt);
            }
        });

        grid81.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid81.setPreferredSize(new java.awt.Dimension(30, 30));
        grid81.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid81KeyTyped(evt);
            }
        });

        grid02.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid02.setAlignmentX(0.0F);
        grid02.setAlignmentY(2.0F);
        grid02.setPreferredSize(new java.awt.Dimension(30, 30));
        grid02.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid02KeyTyped(evt);
            }
        });

        grid12.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid12.setPreferredSize(new java.awt.Dimension(30, 30));
        grid12.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid12KeyTyped(evt);
            }
        });

        grid22.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid22.setPreferredSize(new java.awt.Dimension(30, 30));
        grid22.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid22KeyTyped(evt);
            }
        });

        grid32.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid32.setPreferredSize(new java.awt.Dimension(30, 30));
        grid32.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid32KeyTyped(evt);
            }
        });

        grid42.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid42.setPreferredSize(new java.awt.Dimension(30, 30));
        grid42.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid42KeyTyped(evt);
            }
        });

        grid52.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid52.setPreferredSize(new java.awt.Dimension(30, 30));
        grid52.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid52KeyTyped(evt);
            }
        });

        grid62.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid62.setPreferredSize(new java.awt.Dimension(30, 30));
        grid62.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid62KeyTyped(evt);
            }
        });

        grid72.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid72.setPreferredSize(new java.awt.Dimension(30, 30));
        grid72.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid72KeyTyped(evt);
            }
        });

        grid82.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid82.setPreferredSize(new java.awt.Dimension(30, 30));
        grid82.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid82KeyTyped(evt);
            }
        });

        grid03.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid03.setAlignmentX(0.0F);
        grid03.setAlignmentY(3.0F);
        grid03.setPreferredSize(new java.awt.Dimension(30, 30));
        grid03.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid03KeyTyped(evt);
            }
        });

        grid13.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid13.setPreferredSize(new java.awt.Dimension(30, 30));
        grid13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid13KeyTyped(evt);
            }
        });

        grid23.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid23.setPreferredSize(new java.awt.Dimension(30, 30));
        grid23.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid23KeyTyped(evt);
            }
        });

        grid33.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid33.setPreferredSize(new java.awt.Dimension(30, 30));
        grid33.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid33KeyTyped(evt);
            }
        });

        grid43.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid43.setPreferredSize(new java.awt.Dimension(30, 30));
        grid43.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid43KeyTyped(evt);
            }
        });

        grid53.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid53.setPreferredSize(new java.awt.Dimension(30, 30));
        grid53.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid53KeyTyped(evt);
            }
        });

        grid63.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid63.setPreferredSize(new java.awt.Dimension(30, 30));
        grid63.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid63KeyTyped(evt);
            }
        });

        grid73.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid73.setPreferredSize(new java.awt.Dimension(30, 30));
        grid73.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid73KeyTyped(evt);
            }
        });

        grid83.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid83.setPreferredSize(new java.awt.Dimension(30, 30));
        grid83.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid83KeyTyped(evt);
            }
        });

        grid04.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid04.setAlignmentX(0.0F);
        grid04.setAlignmentY(4.0F);
        grid04.setPreferredSize(new java.awt.Dimension(30, 30));
        grid04.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid04KeyTyped(evt);
            }
        });

        grid14.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid14.setPreferredSize(new java.awt.Dimension(30, 30));
        grid14.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid14KeyTyped(evt);
            }
        });

        grid24.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid24.setPreferredSize(new java.awt.Dimension(30, 30));
        grid24.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid24KeyTyped(evt);
            }
        });

        grid34.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid34.setPreferredSize(new java.awt.Dimension(30, 30));
        grid34.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid34KeyTyped(evt);
            }
        });

        grid44.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid44.setPreferredSize(new java.awt.Dimension(30, 30));
        grid44.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid44KeyTyped(evt);
            }
        });

        grid54.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid54.setPreferredSize(new java.awt.Dimension(30, 30));
        grid54.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid54KeyTyped(evt);
            }
        });

        grid64.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid64.setPreferredSize(new java.awt.Dimension(30, 30));
        grid64.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid64KeyTyped(evt);
            }
        });

        grid74.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid74.setPreferredSize(new java.awt.Dimension(30, 30));
        grid74.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid74KeyTyped(evt);
            }
        });

        grid84.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid84.setPreferredSize(new java.awt.Dimension(30, 30));
        grid84.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid84KeyTyped(evt);
            }
        });

        grid05.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid05.setAlignmentX(0.0F);
        grid05.setAlignmentY(5.0F);
        grid05.setPreferredSize(new java.awt.Dimension(30, 30));
        grid05.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid05KeyTyped(evt);
            }
        });

        grid15.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid15.setPreferredSize(new java.awt.Dimension(30, 30));
        grid15.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid15KeyTyped(evt);
            }
        });

        grid25.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid25.setPreferredSize(new java.awt.Dimension(30, 30));
        grid25.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid25KeyTyped(evt);
            }
        });

        grid35.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid35.setPreferredSize(new java.awt.Dimension(30, 30));
        grid35.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid35KeyTyped(evt);
            }
        });

        grid45.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid45.setPreferredSize(new java.awt.Dimension(30, 30));
        grid45.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid45KeyTyped(evt);
            }
        });

        grid55.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid55.setPreferredSize(new java.awt.Dimension(30, 30));
        grid55.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid55KeyTyped(evt);
            }
        });

        grid65.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid65.setPreferredSize(new java.awt.Dimension(30, 30));
        grid65.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid65KeyTyped(evt);
            }
        });

        grid75.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid75.setPreferredSize(new java.awt.Dimension(30, 30));
        grid75.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid75KeyTyped(evt);
            }
        });

        grid85.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid85.setPreferredSize(new java.awt.Dimension(30, 30));
        grid85.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid85KeyTyped(evt);
            }
        });

        grid06.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid06.setAlignmentX(0.0F);
        grid06.setAlignmentY(6.0F);
        grid06.setPreferredSize(new java.awt.Dimension(30, 30));
        grid06.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid06KeyTyped(evt);
            }
        });

        grid16.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid16.setPreferredSize(new java.awt.Dimension(30, 30));
        grid16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid16KeyTyped(evt);
            }
        });

        grid26.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid26.setPreferredSize(new java.awt.Dimension(30, 30));
        grid26.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid26KeyTyped(evt);
            }
        });

        grid36.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid36.setPreferredSize(new java.awt.Dimension(30, 30));
        grid36.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid36KeyTyped(evt);
            }
        });

        grid46.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid46.setPreferredSize(new java.awt.Dimension(30, 30));
        grid46.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid46KeyTyped(evt);
            }
        });

        grid56.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid56.setPreferredSize(new java.awt.Dimension(30, 30));
        grid56.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid56KeyTyped(evt);
            }
        });

        grid76.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid76.setPreferredSize(new java.awt.Dimension(30, 30));
        grid76.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid76KeyTyped(evt);
            }
        });

        grid86.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid86.setPreferredSize(new java.awt.Dimension(30, 30));
        grid86.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid86KeyTyped(evt);
            }
        });

        grid66.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid66.setPreferredSize(new java.awt.Dimension(30, 30));
        grid66.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid66KeyTyped(evt);
            }
        });

        grid07.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid07.setAlignmentX(0.0F);
        grid07.setAlignmentY(7.0F);
        grid07.setPreferredSize(new java.awt.Dimension(30, 30));
        grid07.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid07KeyTyped(evt);
            }
        });

        grid17.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid17.setPreferredSize(new java.awt.Dimension(30, 30));
        grid17.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid17KeyTyped(evt);
            }
        });

        grid27.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid27.setPreferredSize(new java.awt.Dimension(30, 30));
        grid27.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid27KeyTyped(evt);
            }
        });

        grid37.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid37.setPreferredSize(new java.awt.Dimension(30, 30));
        grid37.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid37KeyTyped(evt);
            }
        });

        grid47.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid47.setPreferredSize(new java.awt.Dimension(30, 30));
        grid47.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid47KeyTyped(evt);
            }
        });

        grid57.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid57.setPreferredSize(new java.awt.Dimension(30, 30));
        grid57.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid57KeyTyped(evt);
            }
        });

        grid67.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid67.setPreferredSize(new java.awt.Dimension(30, 30));
        grid67.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid67KeyTyped(evt);
            }
        });

        grid77.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid77.setPreferredSize(new java.awt.Dimension(30, 30));
        grid77.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid77KeyTyped(evt);
            }
        });

        grid87.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid87.setPreferredSize(new java.awt.Dimension(30, 30));
        grid87.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid87KeyTyped(evt);
            }
        });

        grid08.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid08.setAlignmentX(0.0F);
        grid08.setAlignmentY(8.0F);
        grid08.setPreferredSize(new java.awt.Dimension(30, 30));
        grid08.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid08KeyTyped(evt);
            }
        });

        grid18.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid18.setPreferredSize(new java.awt.Dimension(30, 30));
        grid18.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid18KeyTyped(evt);
            }
        });

        grid28.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid28.setPreferredSize(new java.awt.Dimension(30, 30));
        grid28.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid28KeyTyped(evt);
            }
        });

        grid38.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid38.setPreferredSize(new java.awt.Dimension(30, 30));
        grid38.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid38KeyTyped(evt);
            }
        });

        grid48.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid48.setPreferredSize(new java.awt.Dimension(30, 30));
        grid48.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid48KeyTyped(evt);
            }
        });

        grid58.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid58.setPreferredSize(new java.awt.Dimension(30, 30));
        grid58.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid58KeyTyped(evt);
            }
        });

        grid68.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid68.setPreferredSize(new java.awt.Dimension(30, 30));
        grid68.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid68KeyTyped(evt);
            }
        });

        grid78.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid78.setPreferredSize(new java.awt.Dimension(30, 30));
        grid78.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid78KeyTyped(evt);
            }
        });

        grid88.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        grid88.setPreferredSize(new java.awt.Dimension(30, 30));
        grid88.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                grid88KeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("DejaVu Sans Light", 0, 24)); // NOI18N
        jLabel1.setText("S U D O K U");

        buttonDica.setFont(new java.awt.Font("DejaVu Sans Light", 1, 11)); // NOI18N
        buttonDica.setText("D I C A");
        buttonDica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDicaActionPerformed(evt);
            }
        });

        buttonDesistir.setText("D E S I S T I R");
        buttonDesistir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDesistirActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("DejaVu Sans Light", 0, 18)); // NOI18N
        jLabel3.setText("Erros:");

        jLabel4.setFont(new java.awt.Font("DejaVu Sans Light", 0, 18)); // NOI18N
        jLabel4.setText("Dicas Restantes:");

        jLabel5.setFont(new java.awt.Font("DejaVu Sans Light", 0, 18)); // NOI18N
        jLabel5.setText("Tempo:");

        progressoDicas.setForeground(new java.awt.Color(18, 30, 49));
        progressoDicas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                progressoDicasPropertyChange(evt);
            }
        });

        progressoErros.setForeground(new java.awt.Color(18, 30, 49));
        progressoErros.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                progressoErrosPropertyChange(evt);
            }
        });

        tempo.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tempo.setText("00:00:00");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Clique em enter para confirmar a jogada");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(177, 177, 177)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(grid07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(grid37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(grid67, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(grid77, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(grid06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(grid36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12)
                                .addComponent(grid66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(grid76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6)
                                .addComponent(grid86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(grid02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(grid32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(grid62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(grid72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(grid01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(grid71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(grid00, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(grid10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(grid20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(grid30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(grid40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(grid50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(grid60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel1))
                                        .addGap(6, 6, 6)
                                        .addComponent(grid70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(grid05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(grid35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(grid65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(6, 6, 6)
                                    .addComponent(grid75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(grid85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(grid04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(grid74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(grid03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(grid73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(grid08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(grid18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(grid68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(6, 6, 6)
                                        .addComponent(grid78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(grid88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(progressoErros, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(progressoDicas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(24, 24, 24))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tempo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonDesistir, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonDica, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grid00, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid40, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid50, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid60, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid70, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid80, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(grid01, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid41, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid51, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid61, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid71, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid81, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(progressoErros, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grid02, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid42, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid52, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid62, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid72, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid82, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grid03, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid43, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid53, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid63, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid73, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid83, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grid04, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid34, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid44, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid54, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid64, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid74, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid84, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grid05, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid45, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid55, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid65, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid75, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grid85, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(tempo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(grid06, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid46, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid56, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid76, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid86, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(grid66, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(grid07, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid47, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid57, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid67, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid77, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grid87, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(progressoDicas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grid08, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid38, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid48, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid58, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid68, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid78, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(grid88, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(buttonDica)
                .addGap(18, 18, 18)
                .addComponent(buttonDesistir)
                .addGap(27, 27, 27))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void buttonDicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDicaActionPerformed
        try {
            novoJogo.darDicas();
            progressoDicas.setValue(novoJogo.getDicas());
            setAllTextField();
        } catch (DicasInsuficienteException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }
    }//GEN-LAST:event_buttonDicaActionPerformed

    private void buttonDesistirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDesistirActionPerformed
        dispose();
        new FimDeJogoFrame().setVisible(true);
    }//GEN-LAST:event_buttonDesistirActionPerformed
    // grid00
    private void grid00KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid00KeyTyped
        if (!grid00.getText().equals("")) {
            int valor = Integer.parseInt(grid00.getText());
            try {
                novoJogo.executaMovimento(0, 0, valor);
                grid00.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][0]));
                grid00.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }

    }//GEN-LAST:event_grid00KeyTyped

    private void progressoErrosPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_progressoErrosPropertyChange
        progressoErros.setMaximum(novoJogo.getQuantidadeMaximaErrosDificuldade());
    }//GEN-LAST:event_progressoErrosPropertyChange

    private void grid10KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid10KeyTyped
        if (!grid10.getText().equals("")) {
            int valor = Integer.parseInt(grid10.getText());
            try {
                novoJogo.executaMovimento(1, 0, valor);
                grid10.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][0]));
                grid10.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid10KeyTyped

    private void grid20KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid20KeyTyped
        if (!grid20.getText().equals("")) {
            int valor = Integer.parseInt(grid20.getText());
            try {
                novoJogo.executaMovimento(2, 0, valor);
                grid20.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][0]));
                grid20.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid20KeyTyped

    private void grid01KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid01KeyTyped
        if (!grid01.getText().equals("")) {
            int valor = Integer.parseInt(grid01.getText());
            try {
                novoJogo.executaMovimento(0, 1, valor);
                grid01.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][1]));
                grid01.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid01KeyTyped

    private void grid11KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid11KeyTyped
        if (!grid11.getText().equals("")) {
            int valor = Integer.parseInt(grid11.getText());
            try {
                novoJogo.executaMovimento(1, 1, valor);
                grid11.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][1]));
                grid11.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid11KeyTyped

    private void grid21KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid21KeyTyped
        if (!grid21.getText().equals("")) {
            int valor = Integer.parseInt(grid21.getText());
            try {
                novoJogo.executaMovimento(2, 1, valor);
                grid21.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][1]));
                grid21.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid21KeyTyped

    private void grid02KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid02KeyTyped
        if (!grid02.getText().equals("")) {
            int valor = Integer.parseInt(grid02.getText());
            try {
                novoJogo.executaMovimento(0, 2, valor);
                grid02.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][2]));
                grid02.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid02KeyTyped

    private void grid12KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid12KeyTyped
        if (!grid12.getText().equals("")) {
            int valor = Integer.parseInt(grid12.getText());
            try {
                novoJogo.executaMovimento(1, 2, valor);
                grid12.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][2]));
                grid12.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid12KeyTyped

    private void grid22KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid22KeyTyped
        if (!grid22.getText().equals("")) {
            int valor = Integer.parseInt(grid22.getText());
            try {
                novoJogo.executaMovimento(2, 2, valor);
                grid22.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][2]));
                grid22.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid22KeyTyped

    private void grid30KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid30KeyTyped
        if (!grid30.getText().equals("")) {
            int valor = Integer.parseInt(grid30.getText());
            try {
                novoJogo.executaMovimento(3, 0, valor);
                grid30.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][0]));
                grid30.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid30KeyTyped

    private void grid40KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid40KeyTyped
        if (!grid40.getText().equals("")) {
            int valor = Integer.parseInt(grid40.getText());
            try {
                novoJogo.executaMovimento(4, 0, valor);
                grid40.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][0]));
                grid40.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid40KeyTyped

    private void grid50KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid50KeyTyped
        if (!grid50.getText().equals("")) {
            int valor = Integer.parseInt(grid50.getText());
            try {
                novoJogo.executaMovimento(5, 0, valor);
                grid50.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][0]));
                grid50.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }
    }//GEN-LAST:event_grid50KeyTyped

    private void grid31KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid31KeyTyped
        if (!grid31.getText().equals("")) {
            int valor = Integer.parseInt(grid31.getText());
            try {
                novoJogo.executaMovimento(3, 1, valor);
                grid31.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][1]));
                grid31.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid31KeyTyped

    private void grid41KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid41KeyTyped
        if (!grid41.getText().equals("")) {
            int valor = Integer.parseInt(grid41.getText());
            try {
                novoJogo.executaMovimento(4, 1, valor);
                grid41.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][1]));
                grid41.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid41KeyTyped

    private void grid51KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid51KeyTyped
        if (!grid51.getText().equals("")) {
            int valor = Integer.parseInt(grid51.getText());
            try {
                novoJogo.executaMovimento(5, 1, valor);
                grid51.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][1]));
                grid51.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid51KeyTyped

    private void grid32KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid32KeyTyped
        if (!grid32.getText().equals("")) {
            int valor = Integer.parseInt(grid32.getText());
            try {
                novoJogo.executaMovimento(3, 2, valor);
                grid32.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][2]));
                grid32.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid32KeyTyped

    private void grid42KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid42KeyTyped
        if (!grid42.getText().equals("")) {
            int valor = Integer.parseInt(grid42.getText());
            try {
                novoJogo.executaMovimento(4, 2, valor);
                grid42.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][2]));
                grid42.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid42KeyTyped

    private void grid52KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid52KeyTyped
        if (!grid52.getText().equals("")) {
            int valor = Integer.parseInt(grid52.getText());
            try {
                novoJogo.executaMovimento(5, 2, valor);
                grid52.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][2]));
                grid52.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid52KeyTyped

    private void grid03KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid03KeyTyped
        if (!grid03.getText().equals("")) {
            int valor = Integer.parseInt(grid03.getText());
            try {
                novoJogo.executaMovimento(0, 3, valor);
                grid03.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][3]));
                grid03.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid03KeyTyped

    private void grid13KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid13KeyTyped
        if (!grid13.getText().equals("")) {
            int valor = Integer.parseInt(grid13.getText());
            try {
                novoJogo.executaMovimento(1, 3, valor);
                grid13.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][3]));
                grid13.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid13KeyTyped

    private void grid23KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid23KeyTyped
        if (!grid23.getText().equals("")) {
            int valor = Integer.parseInt(grid23.getText());
            try {
                novoJogo.executaMovimento(2, 3, valor);
                grid23.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][3]));
                grid23.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid23KeyTyped

    private void grid33KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid33KeyTyped
        if (!grid33.getText().equals("")) {
            int valor = Integer.parseInt(grid33.getText());
            try {
                novoJogo.executaMovimento(3, 3, valor);
                grid33.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][3]));
                grid33.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid33KeyTyped

    private void grid04KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid04KeyTyped
        if (!grid04.getText().equals("")) {
            int valor = Integer.parseInt(grid04.getText());
            try {
                novoJogo.executaMovimento(0, 4, valor);
                grid04.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][4]));
                grid04.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid04KeyTyped

    private void grid14KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid14KeyTyped
        if (!grid14.getText().equals("")) {
            int valor = Integer.parseInt(grid14.getText());
            try {
                novoJogo.executaMovimento(1, 4, valor);
                grid14.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][4]));
                grid14.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid14KeyTyped

    private void grid24KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid24KeyTyped
        if (!grid24.getText().equals("")) {
            int valor = Integer.parseInt(grid24.getText());
            try {
                novoJogo.executaMovimento(2, 4, valor);
                grid24.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][4]));
                grid24.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid24KeyTyped

    private void grid05KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid05KeyTyped
        if (!grid05.getText().equals("")) {
            int valor = Integer.parseInt(grid05.getText());
            try {
                novoJogo.executaMovimento(0, 5, valor);
                grid05.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][5]));
                grid05.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid05KeyTyped

    private void grid15KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid15KeyTyped
        if (!grid15.getText().equals("")) {
            int valor = Integer.parseInt(grid15.getText());
            try {
                novoJogo.executaMovimento(1, 5, valor);
                grid15.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][5]));
                grid15.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid15KeyTyped

    private void grid25KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid25KeyTyped
        if (!grid25.getText().equals("")) {
            int valor = Integer.parseInt(grid25.getText());
            try {
                novoJogo.executaMovimento(2, 5, valor);
                grid25.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][5]));
                grid25.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid25KeyTyped

    private void grid43KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid43KeyTyped
        if (!grid43.getText().equals("")) {
            int valor = Integer.parseInt(grid43.getText());
            try {
                novoJogo.executaMovimento(4, 3, valor);
                grid43.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][3]));
                grid43.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid43KeyTyped

    private void grid53KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid53KeyTyped
        if (!grid53.getText().equals("")) {
            int valor = Integer.parseInt(grid53.getText());
            try {
                novoJogo.executaMovimento(5, 3, valor);
                grid53.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][3]));
                grid53.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid53KeyTyped

    private void grid34KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid34KeyTyped
        if (!grid34.getText().equals("")) {
            int valor = Integer.parseInt(grid34.getText());
            try {
                novoJogo.executaMovimento(3, 4, valor);
                grid34.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][4]));
                grid34.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid34KeyTyped

    private void grid44KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid44KeyTyped
        if (!grid44.getText().equals("")) {
            int valor = Integer.parseInt(grid44.getText());
            try {
                novoJogo.executaMovimento(4, 4, valor);
                grid44.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][4]));
                grid44.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid44KeyTyped

    private void grid54KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid54KeyTyped
        if (!grid54.getText().equals("")) {
            int valor = Integer.parseInt(grid54.getText());
            try {
                novoJogo.executaMovimento(5, 4, valor);
                grid54.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][4]));
                grid54.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid54KeyTyped

    private void grid35KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid35KeyTyped
        if (!grid35.getText().equals("")) {
            int valor = Integer.parseInt(grid35.getText());
            try {
                novoJogo.executaMovimento(3, 5, valor);
                grid35.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][5]));
                grid35.setEditable(false);
                
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid35KeyTyped

    private void grid45KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid45KeyTyped
        if (!grid45.getText().equals("")) {
            int valor = Integer.parseInt(grid45.getText());
            try {
                novoJogo.executaMovimento(4, 5, valor);
                grid45.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][5]));
                grid45.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid45KeyTyped

    private void grid55KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid55KeyTyped
        if (!grid55.getText().equals("")) {
            int valor = Integer.parseInt(grid55.getText());
            try {
                novoJogo.executaMovimento(5, 5, valor);
                grid55.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][5]));
                grid55.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid55KeyTyped

    private void grid60KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid60KeyTyped
        if (!grid60.getText().equals("")) {
            int valor = Integer.parseInt(grid60.getText());
            try {
                novoJogo.executaMovimento(6, 0, valor);
                grid60.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][0]));
                grid60.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid60KeyTyped

    private void grid70KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid70KeyTyped
        if (!grid70.getText().equals("")) {
            int valor = Integer.parseInt(grid70.getText());
            try {
                novoJogo.executaMovimento(7, 0, valor);
                grid70.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][0]));
                grid70.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid70KeyTyped

    private void grid80KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid80KeyTyped
        if (!grid80.getText().equals("")) {
            int valor = Integer.parseInt(grid80.getText());
            try {
                novoJogo.executaMovimento(8, 0, valor);
                grid80.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][0]));
                grid80.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid80KeyTyped

    private void grid61KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid61KeyTyped
        if (!grid61.getText().equals("")) {
            int valor = Integer.parseInt(grid61.getText());
            try {
                novoJogo.executaMovimento(6, 1, valor);
                grid61.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][1]));
                grid61.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid61KeyTyped

    private void grid71KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid71KeyTyped
        if (!grid71.getText().equals("")) {
            int valor = Integer.parseInt(grid71.getText());
            try {
                novoJogo.executaMovimento(7, 1, valor);
                grid71.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][1]));
                grid71.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid71KeyTyped

    private void grid81KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid81KeyTyped
        if (!grid81.getText().equals("")) {
            int valor = Integer.parseInt(grid81.getText());
            try {
                novoJogo.executaMovimento(8, 1, valor);
                grid81.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][1]));
                grid81.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid81KeyTyped

    private void grid62KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid62KeyTyped
        if (!grid62.getText().equals("")) {
            int valor = Integer.parseInt(grid62.getText());
            try {
                novoJogo.executaMovimento(6, 2, valor);
                grid62.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][2]));
                grid62.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid62KeyTyped

    private void grid72KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid72KeyTyped
        if (!grid72.getText().equals("")) {
            int valor = Integer.parseInt(grid72.getText());
            try {
                novoJogo.executaMovimento(7, 2, valor);
                grid72.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][2]));
                grid72.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid72KeyTyped

    private void grid82KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid82KeyTyped
        if (!grid82.getText().equals("")) {
            int valor = Integer.parseInt(grid82.getText());
            try {
                novoJogo.executaMovimento(8, 2, valor);
                grid82.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][2]));
                grid82.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid82KeyTyped

    private void grid63KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid63KeyTyped
        if (!grid63.getText().equals("")) {
            int valor = Integer.parseInt(grid63.getText());
            try {
                novoJogo.executaMovimento(6, 3, valor);
                grid63.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][3]));
                grid63.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid63KeyTyped

    private void grid73KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid73KeyTyped
        if (!grid73.getText().equals("")) {
            int valor = Integer.parseInt(grid73.getText());
            try {
                novoJogo.executaMovimento(7, 3, valor);
                grid73.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][3]));
                grid73.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid73KeyTyped

    private void grid83KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid83KeyTyped
        if (!grid83.getText().equals("")) {
            int valor = Integer.parseInt(grid83.getText());
            try {
                novoJogo.executaMovimento(8, 3, valor);
                grid83.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][3]));
                grid83.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid83KeyTyped

    private void grid64KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid64KeyTyped
        if (!grid64.getText().equals("")) {
            int valor = Integer.parseInt(grid64.getText());
            try {
                novoJogo.executaMovimento(6, 4, valor);
                grid64.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][4]));
                grid64.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid64KeyTyped

    private void grid74KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid74KeyTyped
        if (!grid74.getText().equals("")) {
            int valor = Integer.parseInt(grid74.getText());
            try {
                novoJogo.executaMovimento(7, 4, valor);
                grid74.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][4]));
                grid74.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid74KeyTyped

    private void grid84KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid84KeyTyped
        if (!grid84.getText().equals("")) {
            int valor = Integer.parseInt(grid84.getText());
            try {
                novoJogo.executaMovimento(8, 4, valor);
                grid84.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][4]));
                grid84.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid84KeyTyped

    private void grid65KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid65KeyTyped
        if (!grid65.getText().equals("")) {
            int valor = Integer.parseInt(grid65.getText());
            try {
                novoJogo.executaMovimento(6, 5, valor);
                grid65.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][5]));
                grid65.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid65KeyTyped

    private void grid75KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid75KeyTyped
        if (!grid75.getText().equals("")) {
            int valor = Integer.parseInt(grid75.getText());
            try {
                novoJogo.executaMovimento(7, 5, valor);
                grid75.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][5]));
                grid75.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid75KeyTyped

    private void grid85KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid85KeyTyped
        if (!grid85.getText().equals("")) {
            int valor = Integer.parseInt(grid85.getText());
            try {
                novoJogo.executaMovimento(8, 5, valor);
                grid85.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][5]));
                grid85.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid85KeyTyped

    private void grid06KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid06KeyTyped
        if (!grid06.getText().equals("")) {
            int valor = Integer.parseInt(grid06.getText());
            try {
                novoJogo.executaMovimento(0, 6, valor);
                grid06.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][6]));
                grid06.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid06KeyTyped

    private void grid16KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid16KeyTyped
        if (!grid16.getText().equals("")) {
            int valor = Integer.parseInt(grid16.getText());
            try {
                novoJogo.executaMovimento(1, 6, valor);
                grid16.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][6]));
                grid16.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid16KeyTyped

    private void grid26KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid26KeyTyped
        if (!grid26.getText().equals("")) {
            int valor = Integer.parseInt(grid26.getText());
            try {
                novoJogo.executaMovimento(2, 6, valor);
                grid26.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][6]));
                grid26.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid26KeyTyped

    private void grid07KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid07KeyTyped
        if (!grid07.getText().equals("")) {
            int valor = Integer.parseInt(grid07.getText());
            try {
                novoJogo.executaMovimento(0, 7, valor);
                grid07.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][7]));
                grid07.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid07KeyTyped

    private void grid17KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid17KeyTyped
        if (!grid17.getText().equals("")) {
            int valor = Integer.parseInt(grid17.getText());
            try {
                novoJogo.executaMovimento(1, 7, valor);
                grid17.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][7]));
                grid17.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid17KeyTyped

    private void grid27KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid27KeyTyped
        if (!grid27.getText().equals("")) {
            int valor = Integer.parseInt(grid27.getText());
            try {
                novoJogo.executaMovimento(2, 7, valor);
                grid27.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][7]));
                grid27.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid27KeyTyped

    private void grid08KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid08KeyTyped
        if (!grid08.getText().equals("")) {
            int valor = Integer.parseInt(grid08.getText());
            try {
                novoJogo.executaMovimento(0, 8, valor);
                grid08.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][8]));
                grid08.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid08KeyTyped

    private void grid18KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid18KeyTyped
        if (!grid18.getText().equals("")) {
            int valor = Integer.parseInt(grid18.getText());
            try {
                novoJogo.executaMovimento(1, 8, valor);
                grid18.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][8]));
                grid18.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid18KeyTyped

    private void grid28KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid28KeyTyped
        if (!grid28.getText().equals("")) {
            int valor = Integer.parseInt(grid28.getText());
            try {
                novoJogo.executaMovimento(2, 8, valor);
                grid28.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][8]));
                grid28.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid28KeyTyped

    private void grid36KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid36KeyTyped
        if (!grid36.getText().equals("")) {
            int valor = Integer.parseInt(grid36.getText());
            try {
                novoJogo.executaMovimento(3, 6, valor);
                grid36.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][6]));
                grid36.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid36KeyTyped

    private void grid46KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid46KeyTyped
        if (!grid46.getText().equals("")) {
            int valor = Integer.parseInt(grid46.getText());
            try {
                novoJogo.executaMovimento(4, 6, valor);
                grid46.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][6]));
                grid46.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid46KeyTyped

    private void grid56KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid56KeyTyped
        if (!grid56.getText().equals("")) {
            int valor = Integer.parseInt(grid56.getText());
            try {
                novoJogo.executaMovimento(5, 6, valor);
                grid56.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][6]));
                grid56.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid56KeyTyped

    private void grid37KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid37KeyTyped
        if (!grid37.getText().equals("")) {
            int valor = Integer.parseInt(grid37.getText());
            try {
                novoJogo.executaMovimento(3, 7, valor);
                grid37.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][7]));
                grid37.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid37KeyTyped

    private void grid47KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid47KeyTyped
        if (!grid47.getText().equals("")) {
            int valor = Integer.parseInt(grid47.getText());
            try {
                novoJogo.executaMovimento(4, 7, valor);
                grid47.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][7]));
                grid47.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid47KeyTyped

    private void grid57KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid57KeyTyped
        if (!grid57.getText().equals("")) {
            int valor = Integer.parseInt(grid57.getText());
            try {
                novoJogo.executaMovimento(5, 7, valor);
                grid57.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][7]));
                grid57.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid57KeyTyped

    private void grid38KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid38KeyTyped
        if (!grid38.getText().equals("")) {
            int valor = Integer.parseInt(grid38.getText());
            try {
                novoJogo.executaMovimento(3, 8, valor);
                grid38.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][8]));
                grid38.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid38KeyTyped

    private void grid48KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid48KeyTyped
        if (!grid48.getText().equals("")) {
            int valor = Integer.parseInt(grid48.getText());
            try {
                novoJogo.executaMovimento(4, 8, valor);
                grid48.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][8]));
                grid48.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid48KeyTyped

    private void grid58KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid58KeyTyped
        if (!grid58.getText().equals("")) {
            int valor = Integer.parseInt(grid58.getText());
            try {
                novoJogo.executaMovimento(5, 8, valor);
                grid58.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][8]));
                grid58.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid58KeyTyped

    private void grid66KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid66KeyTyped
        if (!grid66.getText().equals("")) {
            int valor = Integer.parseInt(grid66.getText());
            try {
                novoJogo.executaMovimento(6, 6, valor);
                grid66.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][6]));
                grid66.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid66KeyTyped

    private void grid76KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid76KeyTyped
        if (!grid76.getText().equals("")) {
            int valor = Integer.parseInt(grid76.getText());
            try {
                novoJogo.executaMovimento(7, 6, valor);
                grid76.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][6]));
                grid76.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid76KeyTyped

    private void grid86KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid86KeyTyped
        if (!grid86.getText().equals("")) {
            int valor = Integer.parseInt(grid86.getText());
            try {
                novoJogo.executaMovimento(8, 6, valor);
                grid86.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][6]));
                grid86.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid86KeyTyped

    private void grid67KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid67KeyTyped
        if (!grid67.getText().equals("")) {
            int valor = Integer.parseInt(grid67.getText());
            try {
                novoJogo.executaMovimento(6, 7, valor);
                grid67.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][7]));
                grid67.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid67KeyTyped

    private void grid77KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid77KeyTyped
        if (!grid77.getText().equals("")) {
            int valor = Integer.parseInt(grid77.getText());
            try {
                novoJogo.executaMovimento(7, 7, valor);
                grid77.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][7]));
                grid77.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid77KeyTyped

    private void grid87KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid87KeyTyped
        if (!grid87.getText().equals("")) {
            int valor = Integer.parseInt(grid87.getText());
            try {
                novoJogo.executaMovimento(8, 7, valor);
                grid87.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][7]));
                grid87.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid87KeyTyped

    private void grid68KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid68KeyTyped
        if (!grid68.getText().equals("")) {
            int valor = Integer.parseInt(grid68.getText());
            try {
                novoJogo.executaMovimento(6, 8, valor);
                grid68.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][8]));
                grid68.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid68KeyTyped

    private void grid78KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid78KeyTyped
        if (!grid78.getText().equals("")) {
            int valor = Integer.parseInt(grid78.getText());
            try {
                novoJogo.executaMovimento(7, 8, valor);
                grid78.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][8]));
                grid78.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid78KeyTyped

    private void grid88KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_grid88KeyTyped
        if (!grid88.getText().equals("")) {
            int valor = Integer.parseInt(grid88.getText());
            try {
                novoJogo.executaMovimento(8, 8, valor);
                grid88.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][8]));
                grid88.setEditable(false);
            } catch (MovimentoInvalidoException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            } catch (MovimentoIncorretoException ex) {
                progressoErros.setValue(novoJogo.getQuantidadeErros());
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        }    }//GEN-LAST:event_grid88KeyTyped

    private void progressoDicasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_progressoDicasPropertyChange
        progressoDicas.setMaximum(novoJogo.getQuantidadeMaximaErrosDicas());
    }//GEN-LAST:event_progressoDicasPropertyChange
/*Sujeito a melhores implementações 
 *Serve para colocar os valores do tabuleiro na interface
  São independente em relação ao tabuleiro, ou seja, as alterações neles não implicam diretamente na matriz*/

    public void setAllTextField() {
        grid00.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][0]));
        if (!grid00.getText().equals("0")) {
            grid00.setEditable(false);
        } else {
            grid00.setText("");
        }
        grid01.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][1]));
        if (!grid01.getText().equals("0")) {
            grid01.setEditable(false);
        } else {
            grid01.setText("");
        }
        grid02.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][2]));
        if (!grid02.getText().equals("0")) {
            grid02.setEditable(false);
        } else {
            grid02.setText("");
        }
        grid03.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][3]));
        if (!grid03.getText().equals("0")) {
            grid03.setEditable(false);
        } else {
            grid03.setText("");
        }
        grid04.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][4]));
        if (!grid04.getText().equals("0")) {
            grid04.setEditable(false);
        } else {
            grid04.setText("");
        }
        grid05.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][5]));
        if (!grid05.getText().equals("0")) {
            grid05.setEditable(false);
        } else {
            grid05.setText("");
        }
        grid06.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][6]));
        if (!grid06.getText().equals("0")) {
            grid06.setEditable(false);
        } else {
            grid06.setText("");
        }
        grid07.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][7]));
        if (!grid07.getText().equals("0")) {
            grid07.setEditable(false);
        } else {
            grid07.setText("");
        }
        grid08.setText(String.valueOf(novoJogo.getGridTabuleiro()[0][8]));
        if (!grid08.getText().equals("0")) {
            grid08.setEditable(false);
        } else {
            grid08.setText("");
        }
        grid10.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][0]));
        if (!grid10.getText().equals("0")) {
            grid10.setEditable(false);
        } else {
            grid10.setText("");
        }
        grid11.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][1]));
        if (!grid11.getText().equals("0")) {
            grid11.setEditable(false);
        } else {
            grid11.setText("");
        }
        grid12.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][2]));
        if (!grid12.getText().equals("0")) {
            grid12.setEditable(false);
        } else {
            grid12.setText("");
        }
        grid13.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][3]));
        if (!grid13.getText().equals("0")) {
            grid13.setEditable(false);
        } else {
            grid13.setText("");
        }
        grid14.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][4]));
        if (!grid14.getText().equals("0")) {
            grid14.setEditable(false);
        } else {
            grid14.setText("");
        }
        grid15.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][5]));
        if (!grid15.getText().equals("0")) {
            grid15.setEditable(false);
        } else {
            grid15.setText("");
        }
        grid16.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][6]));
        if (!grid16.getText().equals("0")) {
            grid16.setEditable(false);
        } else {
            grid16.setText("");
        }
        grid17.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][7]));
        if (!grid17.getText().equals("0")) {
            grid17.setEditable(false);
        } else {
            grid17.setText("");
        }
        grid18.setText(String.valueOf(novoJogo.getGridTabuleiro()[1][8]));
        if (!grid18.getText().equals("0")) {
            grid18.setEditable(false);
        } else {
            grid18.setText("");
        }
        grid20.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][0]));
        if (!grid20.getText().equals("0")) {
            grid20.setEditable(false);
        } else {
            grid20.setText("");
        }
        grid21.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][1]));
        if (!grid21.getText().equals("0")) {
            grid21.setEditable(false);
        } else {
            grid21.setText("");
        }
        grid22.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][2]));
        if (!grid22.getText().equals("0")) {
            grid02.setEditable(false);
        } else {
            grid22.setText("");
        }
        grid23.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][3]));
        if (!grid23.getText().equals("0")) {
            grid23.setEditable(false);
        } else {
            grid23.setText("");
        }
        grid24.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][4]));
        if (!grid24.getText().equals("0")) {
            grid24.setEditable(false);
        } else {
            grid24.setText("");
        }
        grid25.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][5]));
        if (!grid25.getText().equals("0")) {
            grid25.setEditable(false);
        } else {
            grid25.setText("");
        }
        grid26.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][6]));
        if (!grid26.getText().equals("0")) {
            grid26.setEditable(false);
        } else {
            grid26.setText("");
        }
        grid27.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][7]));
        if (!grid27.getText().equals("0")) {
            grid27.setEditable(false);
        } else {
            grid27.setText("");
        }
        grid28.setText(String.valueOf(novoJogo.getGridTabuleiro()[2][8]));
        if (!grid28.getText().equals("0")) {
            grid28.setEditable(false);
        } else {
            grid28.setText("");
        }
        grid30.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][0]));
        if (!grid30.getText().equals("0")) {
            grid30.setEditable(false);
        } else {
            grid30.setText("");
        }
        grid31.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][1]));
        if (!grid31.getText().equals("0")) {
            grid31.setEditable(false);
        } else {
            grid31.setText("");
        }
        grid32.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][2]));
        if (!grid32.getText().equals("0")) {
            grid32.setEditable(false);
        } else {
            grid32.setText("");
        }
        grid33.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][3]));
        if (!grid33.getText().equals("0")) {
            grid33.setEditable(false);
        } else {
            grid33.setText("");
        }
        grid34.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][4]));
        if (!grid34.getText().equals("0")) {
            grid34.setEditable(false);
        } else {
            grid34.setText("");
        }
        grid35.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][5]));
        if (!grid35.getText().equals("0")) {
            grid35.setEditable(false);
        } else {
            grid35.setText("");
        }
        grid36.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][6]));
        if (!grid36.getText().equals("0")) {
            grid36.setEditable(false);
        } else {
            grid36.setText("");
        }
        grid37.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][7]));
        if (!grid37.getText().equals("0")) {
            grid37.setEditable(false);
        } else {
            grid37.setText("");
        }
        grid38.setText(String.valueOf(novoJogo.getGridTabuleiro()[3][8]));
        if (!grid38.getText().equals("0")) {
            grid38.setEditable(false);
        } else {
            grid38.setText("");
        }
        grid40.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][0]));
        if (!grid40.getText().equals("0")) {
            grid40.setEditable(false);
        } else {
            grid40.setText("");
        }
        grid41.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][1]));
        if (!grid41.getText().equals("0")) {
            grid41.setEditable(false);
        } else {
            grid41.setText("");
        }
        grid42.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][2]));
        if (!grid42.getText().equals("0")) {
            grid42.setEditable(false);
        } else {
            grid42.setText("");
        }
        grid43.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][3]));
        if (!grid43.getText().equals("0")) {
            grid43.setEditable(false);
        } else {
            grid43.setText("");
        }
        grid44.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][4]));
        if (!grid44.getText().equals("0")) {
            grid44.setEditable(false);
        } else {
            grid44.setText("");
        }
        grid45.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][5]));
        if (!grid45.getText().equals("0")) {
            grid45.setEditable(false);
        } else {
            grid45.setText("");
        }
        grid46.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][6]));
        if (!grid46.getText().equals("0")) {
            grid46.setEditable(false);
        } else {
            grid46.setText("");
        }
        grid47.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][7]));
        if (!grid47.getText().equals("0")) {
            grid47.setEditable(false);
        } else {
            grid47.setText("");
        }
        grid48.setText(String.valueOf(novoJogo.getGridTabuleiro()[4][8]));
        if (!grid48.getText().equals("0")) {
            grid48.setEditable(false);
        } else {
            grid48.setText("");
        }
        grid50.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][0]));
        if (!grid50.getText().equals("0")) {
            grid50.setEditable(false);
        } else {
            grid50.setText("");
        }
        grid51.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][1]));
        if (!grid51.getText().equals("0")) {
            grid51.setEditable(false);
        } else {
            grid51.setText("");
        }
        grid52.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][2]));
        if (!grid52.getText().equals("0")) {
            grid52.setEditable(false);
        } else {
            grid52.setText("");
        }
        grid53.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][3]));
        if (!grid53.getText().equals("0")) {
            grid53.setEditable(false);
        } else {
            grid53.setText("");
        }
        grid54.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][4]));
        if (!grid54.getText().equals("0")) {
            grid54.setEditable(false);
        } else {
            grid54.setText("");
        }
        grid55.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][5]));
        if (!grid55.getText().equals("0")) {
            grid55.setEditable(false);
        } else {
            grid55.setText("");
        }
        grid56.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][6]));
        if (!grid56.getText().equals("0")) {
            grid56.setEditable(false);
        } else {
            grid56.setText("");
        }
        grid57.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][7]));
        if (!grid57.getText().equals("0")) {
            grid57.setEditable(false);
        } else {
            grid57.setText("");
        }
        grid58.setText(String.valueOf(novoJogo.getGridTabuleiro()[5][8]));
        if (!grid58.getText().equals("0")) {
            grid58.setEditable(false);
        } else {
            grid58.setText("");
        }
        grid60.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][0]));
        if (!grid60.getText().equals("0")) {
            grid60.setEditable(false);
        } else {
            grid60.setText("");
        }
        grid61.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][1]));
        if (!grid61.getText().equals("0")) {
            grid61.setEditable(false);
        } else {
            grid61.setText("");
        }
        grid62.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][2]));
        if (!grid62.getText().equals("0")) {
            grid62.setEditable(false);
        } else {
            grid62.setText("");
        }
        grid63.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][3]));
        if (!grid63.getText().equals("0")) {
            grid63.setEditable(false);
        } else {
            grid63.setText("");
        }
        grid64.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][4]));
        if (!grid64.getText().equals("0")) {
            grid64.setEditable(false);
        } else {
            grid64.setText("");
        }
        grid65.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][5]));
        if (!grid65.getText().equals("0")) {
            grid65.setEditable(false);
        } else {
            grid65.setText("");
        }
        grid66.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][6]));
        if (!grid66.getText().equals("0")) {
            grid66.setEditable(false);
        } else {
            grid66.setText("");
        }
        grid67.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][7]));
        if (!grid67.getText().equals("0")) {
            grid67.setEditable(false);
        } else {
            grid67.setText("");
        }
        grid68.setText(String.valueOf(novoJogo.getGridTabuleiro()[6][8]));
        if (!grid68.getText().equals("0")) {
            grid68.setEditable(false);
        } else {
            grid68.setText("");
        }
        grid70.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][0]));
        if (!grid70.getText().equals("0")) {
            grid70.setEditable(false);
        } else {
            grid70.setText("");
        }
        grid71.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][1]));
        if (!grid71.getText().equals("0")) {
            grid71.setEditable(false);
        } else {
            grid71.setText("");
        }
        grid72.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][2]));
        if (!grid72.getText().equals("0")) {
            grid72.setEditable(false);
        } else {
            grid72.setText("");
        }
        grid73.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][3]));
        if (!grid73.getText().equals("0")) {
            grid73.setEditable(false);
        } else {
            grid73.setText("");
        }
        grid74.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][4]));
        if (!grid74.getText().equals("0")) {
            grid74.setEditable(false);
        } else {
            grid74.setText("");
        }
        grid75.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][5]));
        if (!grid75.getText().equals("0")) {
            grid75.setEditable(false);
        } else {
            grid75.setText("");
        }
        grid76.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][6]));
        if (!grid76.getText().equals("0")) {
            grid76.setEditable(false);
        } else {
            grid76.setText("");
        }
        grid77.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][7]));
        if (!grid77.getText().equals("0")) {
            grid77.setEditable(false);
        } else {
            grid77.setText("");
        }
        grid78.setText(String.valueOf(novoJogo.getGridTabuleiro()[7][8]));
        if (!grid78.getText().equals("0")) {
            grid78.setEditable(false);
        } else {
            grid78.setText("");
        }
        grid80.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][0]));
        if (!grid80.getText().equals("0")) {
            grid80.setEditable(false);
        } else {
            grid80.setText("");
        }
        grid81.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][1]));
        if (!grid81.getText().equals("0")) {
            grid81.setEditable(false);
        } else {
            grid81.setText("");
        }
        grid82.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][2]));
        if (!grid82.getText().equals("0")) {
            grid82.setEditable(false);
        } else {
            grid82.setText("");
        }
        grid83.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][3]));
        if (!grid83.getText().equals("0")) {
            grid83.setEditable(false);
        } else {
            grid83.setText("");
        }
        grid84.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][4]));
        if (!grid84.getText().equals("0")) {
            grid84.setEditable(false);
        } else {
            grid84.setText("");
        }
        grid85.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][5]));
        if (!grid85.getText().equals("0")) {
            grid85.setEditable(false);
        } else {
            grid85.setText("");
        }
        grid86.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][6]));
        if (!grid86.getText().equals("0")) {
            grid86.setEditable(false);
        } else {
            grid86.setText("");
        }
        grid87.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][7]));
        if (!grid87.getText().equals("0")) {
            grid87.setEditable(false);
        } else {
            grid87.setText("");
        }
        grid88.setText(String.valueOf(novoJogo.getGridTabuleiro()[8][8]));
        if (!grid88.getText().equals("0")) {
            grid88.setEditable(false);
        } else {
            grid88.setText("");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabuleiroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabuleiroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabuleiroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabuleiroFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TabuleiroFrame s = new TabuleiroFrame("a", FACIL, 2);
                new TabuleiroFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDesistir;
    private javax.swing.JButton buttonDica;
    private javax.swing.JTextField grid00;
    private javax.swing.JTextField grid01;
    private javax.swing.JTextField grid02;
    private javax.swing.JTextField grid03;
    private javax.swing.JTextField grid04;
    private javax.swing.JTextField grid05;
    private javax.swing.JTextField grid06;
    private javax.swing.JTextField grid07;
    private javax.swing.JTextField grid08;
    private javax.swing.JTextField grid10;
    private javax.swing.JTextField grid11;
    private javax.swing.JTextField grid12;
    private javax.swing.JTextField grid13;
    private javax.swing.JTextField grid14;
    private javax.swing.JTextField grid15;
    private javax.swing.JTextField grid16;
    private javax.swing.JTextField grid17;
    private javax.swing.JTextField grid18;
    private javax.swing.JTextField grid20;
    private javax.swing.JTextField grid21;
    private javax.swing.JTextField grid22;
    private javax.swing.JTextField grid23;
    private javax.swing.JTextField grid24;
    private javax.swing.JTextField grid25;
    private javax.swing.JTextField grid26;
    private javax.swing.JTextField grid27;
    private javax.swing.JTextField grid28;
    private javax.swing.JTextField grid30;
    private javax.swing.JTextField grid31;
    private javax.swing.JTextField grid32;
    private javax.swing.JTextField grid33;
    private javax.swing.JTextField grid34;
    private javax.swing.JTextField grid35;
    private javax.swing.JTextField grid36;
    private javax.swing.JTextField grid37;
    private javax.swing.JTextField grid38;
    private javax.swing.JTextField grid40;
    private javax.swing.JTextField grid41;
    private javax.swing.JTextField grid42;
    private javax.swing.JTextField grid43;
    private javax.swing.JTextField grid44;
    private javax.swing.JTextField grid45;
    private javax.swing.JTextField grid46;
    private javax.swing.JTextField grid47;
    private javax.swing.JTextField grid48;
    private javax.swing.JTextField grid50;
    private javax.swing.JTextField grid51;
    private javax.swing.JTextField grid52;
    private javax.swing.JTextField grid53;
    private javax.swing.JTextField grid54;
    private javax.swing.JTextField grid55;
    private javax.swing.JTextField grid56;
    private javax.swing.JTextField grid57;
    private javax.swing.JTextField grid58;
    private javax.swing.JTextField grid60;
    private javax.swing.JTextField grid61;
    private javax.swing.JTextField grid62;
    private javax.swing.JTextField grid63;
    private javax.swing.JTextField grid64;
    private javax.swing.JTextField grid65;
    private javax.swing.JTextField grid66;
    private javax.swing.JTextField grid67;
    private javax.swing.JTextField grid68;
    private javax.swing.JTextField grid70;
    private javax.swing.JTextField grid71;
    private javax.swing.JTextField grid72;
    private javax.swing.JTextField grid73;
    private javax.swing.JTextField grid74;
    private javax.swing.JTextField grid75;
    private javax.swing.JTextField grid76;
    private javax.swing.JTextField grid77;
    private javax.swing.JTextField grid78;
    private javax.swing.JTextField grid80;
    private javax.swing.JTextField grid81;
    private javax.swing.JTextField grid82;
    private javax.swing.JTextField grid83;
    private javax.swing.JTextField grid84;
    private javax.swing.JTextField grid85;
    private javax.swing.JTextField grid86;
    private javax.swing.JTextField grid87;
    private javax.swing.JTextField grid88;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JProgressBar progressoDicas;
    private javax.swing.JProgressBar progressoErros;
    private javax.swing.JLabel tempo;
    // End of variables declaration//GEN-END:variables
}
